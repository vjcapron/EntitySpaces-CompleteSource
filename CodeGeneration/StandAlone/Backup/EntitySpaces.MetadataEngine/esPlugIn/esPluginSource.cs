/*  New BSD License
-------------------------------------------------------------------------------
Copyright (c) 2006-2012, EntitySpaces, LLC
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the EntitySpaces, LLC nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL EntitySpaces, LLC BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-------------------------------------------------------------------------------
*/

/*
---------------------------------------------------------------------------  
               Copyright © 2005 - 2007 by EntitySpaces, LLC
                           All Rights Reserved. 
---------------------------------------------------------------------------  
                           LICENSE AGREEMENT
---------------------------------------------------------------------------
This License Agreement is between you (“Customer”) and EntitySpaces, LLC, 
the author of the EntitySpaces™ software and governs your use of the of the
EntitySpaces class libraries, dynamic link libraries, source code, related 
EntitySpaces templates for MyGeneration Software, and documentation (all of 
which are referred to herein as the "Software").

PLEASE READ THIS SOFTWARE LICENSE AGREEMENT CAREFULLY BEFORE PURCHASING, 
DOWNLOADING OR USING THE SOFTWARE. 

NO REFUNDS ARE POSSIBLE. 

BY PURCHASING, INSTALLING, OR DOWNLOADING THE SOFTWARE YOU ARE CONSENTING 
TO BE BOUND BY THIS AGREEMENT. IF YOU DO NOT AGREE TO ALL OF THE TERMS OF
THIS AGREEMENT DO NOT DOWNLOAD OR PURCHASE THE SOFTWARE.

  * Our developer licenses are licensed per developer seat. A developer seat 
    is required for each developer that uses the EntitySpaces templates to 
    generate code or that uses the generated EntitySpaces API in their 
    programming tasks.

  * EntitySpaces, LLC grants Customer a non-exclusive right to install and 
    use one copy of Software for each License purchased. 

  * Customer may make one (1) archival copy of the Software provided Customer 
    affixes to such copy all copyright, confidentiality, and proprietary 
    notices that appear on the original. 

The binary redistributables are royalty free to the original Licensee and 
can be distributed with applications.
    
Binary redistributables include:
 
 1) EntitySpace.Core.dll
 2) EntitySpace.Core.Ce.dll 
 3) EntitySpaces.Interfaces.dll
 4) EntitySpaces.Interfaces.Ce.dll
 5) EntitySpaces.SqlClientProvider.dll
 6) EntitySpaces.SqlClientProvider.Ce.dll
 7) EntitySpaces.MSAccessProvider.dll 
 8) EntitySpaces.OracleClientProvider.dll
 9) EntitySpaces.MySqlClientProvider.dll
10) EntitySpaces.VistaDBProvider.dll  
11) EntitySpaces.VistaDBProvider.Ce.dll  
12) EntitySpaces.NpgsqlProvider.dll  
13) EntitySpaces.Web.dll  
14) EntitySpaces.Web.Design.dll  
15) EntitySpaces.Loader.dll  
16) EntitySpaces.Loader.Ce.dll  
17) EntitySpaces.LoaderMT.dll  
18) EntitySpaces.LoaderMT.Ce.dll 
  
EntitySpaces binary redistributables cannot be used by third parties to build
applications or components.

Source code generated by the EntitySpaces templates for MyGeneration is a 
derivative work. When used under a valid License, EntitySpaces, LLC grants
Customer the right to use, modify, and redistribute any source code generated
by the EntitySpaces templates for MyGeneration.

Customer that has purchased Source Code License may alter the EntitySpaces 
Core, Interfaces, or Provider(s) source code and distribute the modified 
binary redistributables with applications. Customer created binary 
redistributables from the EntitySpaces source code cannot be used by anyone,
including the original license holder, to create a product that competes with
the EntitySpaces .NET Architecture. Customer created binary redistributables
from the EntitySpaces source code cannot be used by third parties to build
applications or components. Neither the original nor altered source code may
be distributed.

EXCEPT AS EXPRESSLY AUTHORIZED ABOVE, CUSTOMER SHALL NOT: COPY, IN WHOLE OR
IN PART, SOFTWARE OR DOCUMENTATION; MODIFY THE SOFTWARE; REVERSE COMPILE OR
REVERSE ASSEMBLE ALL OR ANY PORTION OF THE SOFTWARE; OR RENT, LEASE, 
DISTRIBUTE, SELL, MAKE AVAILABLE FOR DOWNLOAD, OR CREATE DERIVATIVE WORKS
OF THE SOFTWARE OR SOURCE CODE. 

Customer agrees that aspects of the licensed materials, including the specific
design and structure of individual programs, constitute trade secrets and/or
copyrighted material of EntitySpaces, LLC. Customer agrees not to disclose, 
provide, or otherwise make available such trade secrets or copyrighted 
material in any form to any third party without the prior written consent
of EntitySpaces, LLC. Customer agrees to implement reasonable security
measures to protect such trade secrets and copyrighted material. Title
to Software and documentation shall remain solely with EntitySpaces, LLC.

No Warranty 
===============
THE SOFTWARE IS BEING DELIVERED TO YOU "AS IS" AND EntitySpaces, LLC MAKES
NO WARRANTY AS TO ITS USE, RELIABILITY OR PERFORMANCE. EntitySpaces, LLC DOES
NOT AND CANNOT WARRANT THE PERFORMANCE OR RESULTS YOU MAY OBTAIN BY USING THE
SOFTWARE. EntitySpaces, LLC MAKES NO WARRANTIES, EXPRESS OR IMPLIED, AS TO
NONINFRINGEMENT OF THIRD PARTY RIGHTS, TITLE, MERCHANTABILITY, OR FITNESS
FOR ANY PARTICULAR PURPOSE. YOU ASSUME ALL RISK ASSOCIATED WITH THE QUALITY,
PERFORMANCE, INSTALLATION AND USE OF THE SOFTWARE INCLUDING, BUT NOT LIMITED
TO, THE RISKS OF PROGRAM ERRORS, DAMAGE TO EQUIPMENT, LOSS OF DATA OR SOFTWARE
PROGRAMS, OR UNAVAILABILITY OR INTERRUPTION OF OPERATIONS. YOU ARE SOLELY
RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USE OF THE SOFTWARE AND
ASSUME ALL RISKS ASSOCIATED WITH ITS USE.

Indemnification
===============
You agree to indemnify and hold EntitySpaces, LLC, parents, subsidiaries,
affiliates, officers and employees, harmless from any claim or demand,
including reasonable attorneys' fees, made by any third party due to or 
arising out of your use of the Software, or the infringement by you, of
any intellectual property or other right of any person or entity.

Limitation of Liability
===============
IN NO EVENT WILL EntitySpaces, LLC BE LIABLE TO YOU FOR ANY INDIRECT,
INCIDENTAL, SPECIAL, PUNITIVE, CONSEQUENTIAL, OR OTHER DAMAGES WHATSOEVER,
OR ANY LOSS OF REVENUE, DATA, USE, OR PROFITS, EVEN IF EntitySpaces, LLC
HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, AND REGARDLESS OF
WHETHER THE CLAIM IS BASED UPON ANY CONTRACT, TORT OR OTHER LEGAL OR
EQUITABLE THEORY.

This License is effective until terminated. Customer may terminate this
License at any time by destroying all copies of Software including any
documentation. This License will terminate immediately without notice
from EntitySpaces, LLC if Customer fails to comply with any provision
of this License. Upon termination, Customer must destroy all copies of
Software.

Software, including technical data, is subject to U.S. export control
laws, including the U.S. Export Administration Act and its associated
regulations, and may be subject to export or import regulations in other
countries. Customer agrees to comply strictly with all such regulations
and acknowledges that it has the responsibility to obtain licenses to
export, re-export, or import Software.

This License shall be governed by and construed in accordance with the
laws of the State of Indiana, United States of America, as if performed
wholly within the state and without giving effect to the principles 
of conflict of law. If any portion hereof is found to be void or 
unenforceable, the remaining provisions of this License shall remain
in full force and effect. This License constitutes the entire License
between the parties with respect to the use of the Software.
  
*/

using System;

using EntitySpaces.MetadataEngine;

namespace EntitySpaces.MetadataEngine
{
    /// <summary>
    /// This class helps in writing templates that execute transparently on either an ITable or an IView. 
    /// </summary>
    public class esPluginSource
    {
        /// <summary>
        /// Constructor, pass in an ITable or IView but not both. Use null for the one not used.
        /// </summary>
        /// <example>
        /// C# Template Code
        /// <code>
        /// ITable table = MyMeta.Databases["Northwind"].Tables["Employees"];
        /// EntitySpaces.PlugIn.esPluginSource source = new EntitySpaces.PlugIn.esPluginSource(table, null);
        /// 
        /// // or
        /// 
        /// IView view = MyMeta.Databases["Northwind"].Views["Product Sales for 1997"];
        /// EntitySpaces.PlugIn.esPluginSource source = new EntitySpaces.PlugIn.esPluginSource(null, view);
        /// </code>
        /// </example> 
        /// <param name="table">The ITable</param>
        /// <param name="view">The IView</param>
        public esPluginSource(Root esMeta, ITable table, IView view)
        {
            this.esMeta = esMeta;
            this.table = table;
            this.view = view;
        }

        /// <summary>
        /// A way to generically get the columns
        /// </summary>
        public IColumns Columns
        {
            get
            {
                return (table != null) ? table.Columns : view.Columns;
            }
        }

        /// <summary>
        /// Returns either the ITable.Name or the IView.Name
        /// </summary>
        public string PhysicalName
        {
            get
            {
                if (table != null)
                    return table.Name;
                else
                    return view.Name;
            }
        }

        /// <summary>
        /// Returns either the ITable.Schema or the IView.Schema
        /// </summary>
        public string Schema
        {
            get
            {
                if (table != null)
                    return table.Schema;
                else
                    return view.Schema;
            }
        }

        /// <summary>
        /// Returns either the ITable.Database.Name or the IView.Database.Name
        /// </summary>
        public string Catalog
        {
            get
            {
                if (table != null)
                    return table.Database.Name;
                else
                    return view.Database.Name;
            }
        }

        #region Naming Properties for Code Generation

        public string Entity
        {
            get
            {
                return esMeta.esPlugIn.Entity(this);
            }
        }

        public string esEntity
        {
            get
            {
                return esMeta.esPlugIn.esEntity(this);
            }
        }

        public string Collection
        {
            get
            {
                return esMeta.esPlugIn.Collection(this);
            }
        }

        public string esCollection
        {
            get
            {
                return esMeta.esPlugIn.esCollection(this);
            }
        }

        public string Query
        {
            get
            {
                return esMeta.esPlugIn.Query(this);
            }
        }

        public string esQuery
        {
            get
            {
                return esMeta.esPlugIn.esQuery(this);
            }
        }

        public string Metadata
        {
            get
            {
                return esMeta.esPlugIn.Metadata(this);
            }
        }

        public string ProxyStub
        {
            get
            {
                return esMeta.esPlugIn.ProxyStub(this);
            }
        }

        public string ProxyStubCollection
        {
            get
            {
                return esMeta.esPlugIn.ProxyStubCollection(this);
            }
        }

        public string ProxyStubQuery
        {
            get
            {
                return esMeta.esPlugIn.ProxyStubQuery(this);
            }
        }

        #endregion

        internal Root esMeta;
        internal ITable table;
        internal IView view;
    }
}
